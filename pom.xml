<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.reactome.maven</groupId>
        <artifactId>reactome-parent</artifactId>
        <version>1.0.5</version>
    </parent>

    <groupId>org.reactome.server.tools</groupId>
    <artifactId>fireworks-exporter</artifactId>
    <version>1.2.9-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Fireworks Exporter</name>
    <description>Export Pathway fireworks into raster</description>
    <url>https://github.com/reactome/fireworks-exporter</url>
    <organization>
        <name>Reactome</name>
        <url>https://reactome.org/</url>
    </organization>
    <licenses>
        <license>
            <name>GNU Affero General Public License, version 3</name>
            <url>https://www.gnu.org/licenses/agpl-3.0.html</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>plorente</id>
            <name>Pascual Lorente</name>
            <roles>
                <role>alumni</role>
            </roles>
            <organization>The European Bioinformatics Institute</organization>
            <organizationUrl>https://www.ebi.ac.uk/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/reactome/fireworks-exporter.git</connection>
        <developerConnection>scm:git:ssh://github.com:reactome/fireworks-exporter.git</developerConnection>
        <url>https://github.com/reactome/fireworks-exporter/tree/master</url>
    </scm>
    <!-- Configures the distribution to nexus repository -->
    <distributionManagement>
        <!-- Sonatype Release repo -->
        <repository>
            <id>ossrh</id>
            <name>Sonatype Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>

        <!-- Sonatype SNAPSHOT repo -->
        <snapshotRepository>
            <id>ossrh</id>
            <name>Sonatype Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>

        <!--build-->
        <dependency.locations.enabled>false</dependency.locations.enabled>
        <main.class>org.reactome.server.tools.fireworks.exporter.FireworksExporter</main.class>

        <maven.release.version>3.3.1</maven.release.version>
        <maven.gpg.version>3.2.7</maven.gpg.version>
        <maven.javadoc.version>3.11.2</maven.javadoc.version>
        <maven.tidy.version>1.3.0</maven.tidy.version>
        <nexus-staging-maven-plugin>1.7.0</nexus-staging-maven-plugin>
    </properties>

    <dependencies>

        <!-- Diagram Reader -->
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>diagram-reader</artifactId>
        </dependency>

        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>analysis-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!--Logback classic-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <!--JSAP console reader-->
        <dependency>
            <groupId>com.martiansoftware</groupId>
            <artifactId>jsap</artifactId>
        </dependency>

        <!-- Batik for SVG -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>layout</artifactId>
        </dependency>
    </dependencies>

    <!-- Repositories -->
    <repositories>

        <!-- MAVEN central -->
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>central-bck</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>nexus-ebi-repo-release</id>
            <name>The EBI internal repository</name>
            <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>nexus-ebi-repo-snapshot</id>
            <name>The EBI internal repository</name>
            <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <finalName>${project.name}</finalName>
        <!-- Add this if you are having problems with the fonts resources -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.ttf</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.ttf</include>
                </includes>
            </resource>

        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.ttf</exclude>
                    <exclude>**/*.bin</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.version}</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/logback.xml</exclude>
                                <exclude>**/license/</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>exec-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                    <classifier>exec</classifier>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Nexus staging plugin for Sonatype deployment -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus-staging-maven-plugin}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <!-- Generate JavaDoc jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnError>false</failOnError>
                    <additionalJOptions>
                        <additionalJOption>-Xdoclint:none</additionalJOption>
                    </additionalJOptions>
                </configuration>
            </plugin>

            <!-- Signs deployed jar, source jar, and JavaDoc jar with GPG -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven.gpg.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <gpgExecutable>gpg</gpgExecutable> <!-- Explicitly specify the GPG executable -->
                </configuration>
            </plugin>

            <!-- Allows "release" mvn goal to deploy a SNAPSHOT or version release to Sonatype -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tidy-maven-plugin</artifactId>
                <version>${maven.tidy.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
